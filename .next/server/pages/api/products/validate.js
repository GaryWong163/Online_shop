"use strict";(()=>{var e={};e.id=192,e.ids=[192],e.modules={2496:e=>{e.exports=require("aws-sdk")},3480:(e,r,t)=>{e.exports=t(5600)},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,r)=>{Object.defineProperty(r,"M",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},7012:e=>{e.exports=require("mysql2")},7740:(e,r,t)=>{t.r(r),t.d(r,{config:()=>p,default:()=>d,routeModule:()=>l});var o={};t.r(o),t.d(o,{default:()=>u});var n=t(3480),a=t(8667),s=t(6435),i=t(9365),c=t.n(i);async function u(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});let{pids:t}=e.body;if(!Array.isArray(t)||0===t.length)return r.status(400).json({error:"Invalid or empty pids array"});try{let[e]=await c().query("SELECT pid, name, price FROM products WHERE pid IN (?)",[t]);r.status(200).json(e)}catch(e){console.error("Error fetching products:",e),r.status(500).json({error:"Failed to fetch product data"})}}let d=(0,s.M)(o,"default"),p=(0,s.M)(o,"config"),l=new n.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/products/validate",pathname:"/api/products/validate",bundlePath:"",filename:""},userland:o})},8667:(e,r)=>{Object.defineProperty(r,"A",{enumerable:!0,get:function(){return t}});var t=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9365:(e,r,t)=>{let o=t(7012),n=t(2496),a=o.createConnection({host:process.env.DB_HOST,port:process.env.DB_PORT,user:process.env.DB_USER,password:process.env.DB_PASSWORD,database:process.env.DB_NAME,waitForConnections:!0,connectionLimit:10,queueLimit:0}).promise(),s=new n.RDS({region:process.env.AWS_REGION});async function i(){try{let[e]=await a.execute("SELECT 1 AS alive");return console.log("Database health check: OK",e),!0}catch(e){console.error("Database health check failed:",e);try{await s.rebootDBInstance({DBInstanceIdentifier:process.env.DB_INSTANCE_ID,ForceFailover:!1}).promise(),console.log(`RDS reboot initiated for ${process.env.DB_INSTANCE_ID}`)}catch(e){console.error("Failed to reboot RDS:",e)}return!1}}setInterval(()=>{i()},3e5),i(),e.exports=a}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=7740);module.exports=t})();