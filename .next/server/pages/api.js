"use strict";(()=>{var t={};t.id=880,t.ids=[880],t.modules={237:(t,e)=>{Object.defineProperty(e,"A",{enumerable:!0,get:function(){return a}});var a=function(t){return t.PAGES="PAGES",t.PAGES_API="PAGES_API",t.APP_PAGE="APP_PAGE",t.APP_ROUTE="APP_ROUTE",t.IMAGE="IMAGE",t}({})},1413:(t,e)=>{Object.defineProperty(e,"M",{enumerable:!0,get:function(){return function t(e,a){return a in e?e[a]:"then"in e&&"function"==typeof e.then?e.then(e=>t(e,a)):"function"==typeof e&&"default"===a?e:void 0}}})},3684:(t,e,a)=>{a.r(e),a.d(e,{config:()=>n,default:()=>d,routeModule:()=>c});var r=a(7602),s=a(237),i=a(1413),o=a(6908);let d=(0,i.M)(o,"default"),n=(0,i.M)(o,"config"),c=new r.PagesAPIRouteModule({definition:{kind:s.A.PAGES_API,page:"/api",pathname:"/api",bundlePath:"",filename:""},userland:o})},5600:t=>{t.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6908:(t,e,a)=>{a.r(e),a.d(e,{addCategory:()=>i,addProduct:()=>o,deleteCategory:()=>d,deleteProduct:()=>n,fetchCategories:()=>r,fetchOrders:()=>c,fetchProducts:()=>s,fetchUserOrders:()=>u});let r=async()=>{let t=await fetch("/categories",{credentials:"include"});if(!t.ok){let e=await t.text();throw Error(`Failed to fetch categories: ${t.status} ${t.statusText} - ${e}`)}return t.json()},s=async()=>{let t=await fetch("/products",{credentials:"include"});if(!t.ok){let e=await t.text();throw Error(`Failed to fetch products: ${t.status} ${t.statusText} - ${e}`)}return t.json()},i=async t=>{let e=await fetch("/categories",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({name:t})});if(!e.ok){let t=await e.text();throw Error(`Failed to add category: ${e.status} ${e.statusText} - ${t}`)}},o=async(t,e,a,r,s)=>{let i=new FormData;i.append("catid",t),i.append("name",e),i.append("price",a),i.append("description",r),s&&i.append("image",s);let o=await fetch("/products",{method:"POST",credentials:"include",body:i});if(!o.ok){let t=await o.text();throw Error(`Failed to add product: ${o.status} ${o.statusText} - ${t}`)}},d=async(t,e)=>{let a=await fetch(`/categories/${t}`,{method:"DELETE",credentials:"include"});if(!a.ok){let t=await a.text();throw Error(`Failed to delete category: ${a.status} ${a.statusText} - ${t}`)}e()},n=async(t,e)=>{let a=await fetch(`/products/${t}`,{method:"DELETE",credentials:"include"});if(!a.ok){let t=await a.text();throw Error(`Failed to delete product: ${a.status} ${a.statusText} - ${t}`)}e()},c=async()=>{let t=await fetch("/api/orders",{credentials:"include"});if(!t.ok)throw Error("Failed to fetch orders");let e=await t.json();return console.log("Raw /api/orders response:",e),e.map(t=>({id:t.id,user_id:t.user_id,total:t.total,created_at:t.created_at,payment_status:t.payment_status,items:t.items||[]}))},u=async()=>{let t=await fetch("/api/user-orders",{credentials:"include"});if(!t.ok){let e=await t.text();throw Error(`Failed to fetch user orders: ${t.status} ${t.statusText} - ${e}`)}let e=await t.json();return console.log("Raw /api/user-orders response:",e),e.map(t=>({id:t.id,user_id:t.user_id,total:t.total,created_at:t.created_at,payment_status:t.payment_status,items:t.items||[]}))}},7602:(t,e,a)=>{t.exports=a(5600)}};var e=require("../webpack-runtime.js");e.C(t);var a=e(e.s=3684);module.exports=a})();